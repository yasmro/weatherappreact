{"version":3,"sources":["config.js","component/Conditions.js","component/Weekly.js","component/Hourly.js","component/Forecast.js","component/Clock.js","App.js","serviceWorker.js","index.js"],"names":["exports","owmapikey","conditions","props","exitBeforeEnter","error","div","animate","y","opacity","initial","exit","transition","duration","key","className","loading","responseObj","cod","x","name","start","end","Math","round","main","temp","suffix","code","rcode","toString","condition","slice","responseCondition","weather","temp_max","temp_min","description","pressure","humidity","offset","timezone","dt","date","Date","console","log","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","dow_index","getSeconds","getDay","dow_str","format_str_date","replace","format_str_time","FormattedDate","getTime","getTimezoneOffset","Weekly","days","responseWeeklyObj","daily","delay","map","day","i","timezone_offset","num","max","min","scope","Hourly","hours","hourly","filter","hour","item","hidden","show","variants","delayChildren","Forecast","useState","setResponseObj","setResponseWeeklyObj","city","setCity","unit","setUnit","setError","setLoading","apikey","require","getForecast","e","preventDefault","length","uriEncodedCity","encodeURIComponent","fetch","then","response","json","Error","lat","lon","coord","catch","onLoad","onSubmit","id","type","placeholder","maxLength","value","onChange","target","class","checked","for","Conditions","second_str","Clock","state","this","timerID","setInterval","tick","clearInterval","setState","React","Component","App","h","gradCode","style","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.69b62520.chunk.js","sourcesContent":["exports.owmapikey  = 'edfe7dce5e4f5c1b0c1b15405cc77b9b';","import React, { useState } from 'react';\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport CountUp from 'react-countup';\n\nconst conditions = (props) => {\n    // var rcode = props.responseObj.weather.id.toString();\n\n    function getLocalTime(offset){\n      var t = new Date(((new Date()).getTime() + (new Date()).getTimezoneOffset() * 60 * 1000 + offset * 1000));\n      var str = FormattedDate(t/1000);\n      return str;\n    }\n\n    function FormattedDate(dt) {\n\n      dt = dt * 1000;\n      const dayOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  \n      var date = new Date(dt)\n      console.log(date)\n      var year_str = date.getFullYear();\n      //月だけ+1すること\n      var month_str = 1 + date.getMonth();\n      var day_str = date.getDate();\n\n      var hour_str = date.getHours();\n      var minute_str = date.getMinutes();\n      var second_str = date.getSeconds();\n\n      var dow_index = date.getDay();\n      \n      month_str = ('0' + month_str).slice(-2);\n      // day_str = ('0' + day_str).slice(-2);\n\n      hour_str = ('0' + hour_str).slice(-2);\n      minute_str = ('0' + minute_str).slice(-2);\n      \n  \n      var dow_str = dayOfWeek[dow_index].slice(0,3);\n      \n      var format_str_date = 'DD (A)';\n      format_str_date = format_str_date.replace(/YYYY/g, year_str);\n      format_str_date = format_str_date.replace(/MM/g, month_str);\n      format_str_date = format_str_date.replace(/DD/g, day_str);\n      format_str_date = format_str_date.replace(/A/g, dow_str);\n\n      var format_str_time = 'hh:mm';\n      format_str_time = format_str_time.replace(/hh/g, hour_str);\n      format_str_time = format_str_time.replace(/mm/g, minute_str);\n\n      return format_str_time + \", \" + format_str_date ;\n  }\n\n    function responseCondition(code){\n\n      var res = props.responseObj;\n      code = res[\"weather\"][0][\"id\"];\n\n      var rcode = code.toString();\n      \n      var condition = '';\n\n      if(rcode.slice(0, 1) === '2'){\n        condition = 'wi-storm-showers'\n      }else if(rcode.slice(0, 1) === '3'){\n        condition = 'wi-showers'\n      }else if(rcode.slice(0, 1) === '5'){\n        if(rcode === '500' || rcode.slice(0, 2) === '52'){\n          condition = 'wi-showers';\n        }else if(rcode === '502' || rcode === '503' || rcode === '504'){\n          condition = 'wi-rain';\n        }else{\n          condition = 'wi-rain';\n        }\n      }else if(rcode.slice(0, 1) === '6'){\n        condition = 'wi-snow'\n      }else if(rcode.slice(0, 1) === '7'){\n        condition = 'wi-fog'\n      }else if(rcode.slice(0, 1) === '8'){\n        if(rcode === '800'){\n          condition = 'wi-day-sunny'\n        }else if(rcode === '801' || rcode === '802'){\n          condition = 'wi-day-cloudy'\n        }else{\n          condition = 'wi-cloudy'\n        }\n      }\n\n      return condition;\n    }\n\n    return (\n        <div>\n          <AnimatePresence exitBeforeEnter>\n            {props.error &&\n                <motion.div\n                animate={{\n                  y: 0,\n                  opacity: 1\n                }}\n                initial={{\n                  y: 50,\n                  opacity: 0\n                }}\n                exit={{\n                  \n                }}\n                transition={{\n                  duration: 0.1\n                }}\n                key=\"error\"\n                >\n                <span className=\"badge badge-danger\"><h2>Please enter a valid city.</h2></span>\n              </motion.div>\n              \n            }\n            {props.loading && \n              <motion.div\n              animate={{\n                opacity: 1\n              }}\n              initial={{\n                opacity: 0\n              }}\n              exit={{\n                \n              }}\n              transition={{\n                duration: 0.5\n              }}\n              key=\"loading\"\n              >\n              <h1>Loading...</h1>\n              </motion.div>\n            }\n            {(props.responseObj.cod === 200 && !props.loading && !props.error) &&\n              \n                <motion.div\n                animate={{\n                  x: 0,\n                  opacity: 1\n                }}\n                initial={{\n                  x: 50,\n                  opacity: 0\n                }}\n                exit={{\n                 \n                }}\n                transition={{\n                  duration: 0.5\n                }}\n                key=\"a\"\n                >\n                    \n                    <h1>\n                        <strong>{props.responseObj.name}</strong>\n                    </h1>\n                    <h1 className=\"display-2 counter\">\n                      <CountUp start={0} end={Math.round(props.responseObj.main.temp)} suffix=\"°\" duration={1.5}></CountUp>\n                      <i className={\"pl-1 position-relative wi \" + responseCondition(props.responseObj.weather[0].cod)}></i>\n                    </h1>\n                    \n                    <h3>(<CountUp start={0} end={Math.round(props.responseObj.main.temp_max)} suffix=\"°\" duration={1.5}></CountUp> / <CountUp start={0} end={Math.round(props.responseObj.main.temp_min)} suffix=\"°\" duration={1.5}></CountUp>)</h3>\n                    <h3><strong>{props.responseObj.weather[0].description}</strong></h3>\n\n                    <h5>Pressure: <CountUp start={900} end={Math.round(props.responseObj.main.pressure)} suffix=\"hPa\" duration={1.5}></CountUp></h5>\n                    <h5>Humidity: <CountUp start={0} end={Math.round(props.responseObj.main.humidity)} suffix=\"%\" duration={1.5}></CountUp></h5>\n                    <h5>Local time: {getLocalTime(props.responseObj.timezone)}</h5>\n                    \n\n                    \n                </motion.div>\n                                    \n             \n            }\n          </AnimatePresence>\n        </div>\n    )\n }\n \n export default conditions;","import React, { useState } from 'react';\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport CountUp from 'react-countup';\n\n\n\nconst Weekly = (props) => {\n    \n\n    \n    const numbers = [1, 2, 3, 4, 5];\n    console.log(props);\n\n    // var days2 = []\n    var days = props.responseWeeklyObj.daily;\n    console.log(days)\n\n    function FormattedDate(dt) {\n\n        dt = dt * 1000;\n        const dayOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    \n        var date = new Date(dt)\n        console.log(date)\n        var year_str = date.getFullYear();\n        //月だけ+1すること\n        var month_str = 1 + date.getMonth();\n        var day_str = date.getDate();\n        var dow_index = date.getDay();\n        \n        month_str = ('0' + month_str).slice(-2);\n        // day_str = ('0' + day_str).slice(-2);\n        \n    \n        var dow_str = dayOfWeek[dow_index].slice(0,3);\n        \n        var format_str_date = 'DD (A)';\n        format_str_date = format_str_date.replace(/YYYY/g, year_str);\n        format_str_date = format_str_date.replace(/MM/g, month_str);\n        format_str_date = format_str_date.replace(/DD/g, day_str);\n        format_str_date = format_str_date.replace(/A/g, dow_str);\n        \n        \n        return format_str_date;\n    }\n\n    function getDate(dt) {\n        dt = dt * 1000;\n        var date = new Date(dt)\n        return date;\n    }\n\n    function getDayOfWeek(num) {\n        const dayOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n        return dayOfWeek[num];\n    }\n\n    function responseCondition(code){\n\n        var res = props.responseObj;\n        // code = res[\"weather\"][0][\"id\"];\n  \n        var rcode = code.toString();\n        \n        var condition = '';\n  \n        if(rcode.slice(0, 1) === '2'){\n          condition = 'wi-storm-showers'\n        }else if(rcode.slice(0, 1) === '3'){\n          condition = 'wi-showers'\n        }else if(rcode.slice(0, 1) === '5'){\n          if(rcode === '500' || rcode.slice(0, 2) === '52'){\n            condition = 'wi-showers';\n          }else if(rcode === '502' || rcode === '503' || rcode === '504'){\n            condition = 'wi-rain';\n          }else{\n            condition = 'wi-rain';\n          }\n        }else if(rcode.slice(0, 1) === '6'){\n          condition = 'wi-snow'\n        }else if(rcode.slice(0, 1) === '7'){\n          condition = 'wi-fog'\n        }else if(rcode.slice(0, 1) === '8'){\n          if(rcode === '800'){\n            condition = 'wi-day-sunny'\n          }else if(rcode === '801' || rcode === '802'){\n            condition = 'wi-day-cloudy'\n          }else{\n            condition = 'wi-cloudy'\n          }\n        }\n  \n        return condition;\n      }   \n    \n\n    return (\n        <div>\n            { \n             (!props.loading && !props.error && props.responseWeeklyObj.daily) ?\n                <AnimatePresence exitBeforeEnter>\n                <motion.div\n                animate={{\n                x: 0,\n                opacity: 1\n                }}\n                initial={{\n                x: 50,\n                opacity: 0\n                }}\n                exit={{\n                x: -50,\n                opacity: 0\n                }}\n                transition={{\n                duration: 0.5,\n                delay:0.2\n                }}\n                key=\"a\"\n                >\n                    <h1 className=\"h3\">Weekly</h1>\n                    {/* {JSON.stringify(props.responseObj.daily)} */}\n\n                    <div className=\"overflow-auto\">\n                        <div className=\"d-inline-flex\">\n                            {\n                                days.map((day, i) =>                                         \n                                <div key={i} className=\"mr-2 px-2 weather-card\">\n                                    <p className=\"h3 mb-0\">{getDate(day.dt + new Date().getTimezoneOffset() * 60 + props.responseWeeklyObj.timezone_offset).getDate()}</p>\n                                    <p className=\"\">{getDayOfWeek(getDate(day.dt + new Date().getTimezoneOffset() * 60 + props.responseWeeklyObj.timezone_offset).getDay()).slice(0,3)}</p>\n                                    <i className={\"wi h2 \" + responseCondition(day[\"weather\"][0][\"id\"])}></i>\n                                    <p className=\"h5\"><CountUp start={0} end={Math.round(day.temp.max)} suffix=\"°\" duration={1.5}></CountUp><br/><CountUp start={0} end={Math.round(day.temp.min)} suffix=\"°\" duration={1.5}></CountUp></p>  \n                                </div>\n                            )\n                            }\n                        </div>\n                    </div>\n\n                    \n                    \n                    <div className=\"table-responsive-xl d-none\">\n                        <table className=\"table table-sm max-width text-white text-center\">\n                            <thead className=\"thead-dark\">\n                                <tr>\n                                    <th scope=\"col\">Date</th>\n                                    <th scope=\"col\">Weather</th>\n                                    <th scope=\"col\">Temp. (max/min)</th>\n                                    \n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                   days.map((day, i) =>                                         \n                                        <tr key={i}>\n                                            <td >{FormattedDate(day[\"dt\"])}</td>\n                                            <td ><i className={\"wi \" + responseCondition(day[\"weather\"][0][\"id\"])}></i></td>\n                                            <td ><CountUp start={0} end={Math.round(day.temp.max)} suffix=\"°\" duration={1.5}></CountUp>/ <CountUp start={0} end={Math.round(day.temp.min)} suffix=\"°\" duration={1.5}></CountUp></td>  \n                                        </tr>\n                                    )\n                                    // JSON.stringify(days.daily)\n\n                                }\n                                \n                            </tbody>\n                        </table>\n                    </div>\n                </motion.div>\n                </AnimatePresence>\n                : null\n            }\n        </div>\n    )\n }\n \n export default Weekly;","import React, { useState } from 'react';\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport CountUp from 'react-countup';\n\n\nconst Hourly = (props) => {\n    \n\n    \n    const numbers = [1, 2, 3, 4, 5];\n    console.log(props);\n\n    // var days2 = []\n    var hours = [];\n    var eachHour = 3;\n    if(props.responseWeeklyObj.hourly){\n      hours = props.responseWeeklyObj.hourly.filter(hour => hour.dt % (3600*eachHour) == 0);\n    }\n\n    function getDate(dt) {\n      dt = dt * 1000;\n      var date = new Date(dt)\n      return date;\n  }\n\n  function getDayOfWeek(num) {\n      const dayOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      return dayOfWeek[num];\n  }\n\n  function responseCondition(code){\n\n      var res = props.responseObj;\n      // code = res[\"weather\"][0][\"id\"];\n\n      var rcode = code.toString();\n      \n      var condition = '';\n\n      if(rcode.slice(0, 1) === '2'){\n        condition = 'wi-storm-showers'\n      }else if(rcode.slice(0, 1) === '3'){\n        condition = 'wi-showers'\n      }else if(rcode.slice(0, 1) === '5'){\n        if(rcode === '500' || rcode.slice(0, 2) === '52'){\n          condition = 'wi-showers';\n        }else if(rcode === '502' || rcode === '503' || rcode === '504'){\n          condition = 'wi-rain';\n        }else{\n          condition = 'wi-rain';\n        }\n      }else if(rcode.slice(0, 1) === '6'){\n        condition = 'wi-snow'\n      }else if(rcode.slice(0, 1) === '7'){\n        condition = 'wi-fog'\n      }else if(rcode.slice(0, 1) === '8'){\n        if(rcode === '800'){\n          condition = 'wi-day-sunny'\n        }else if(rcode === '801' || rcode === '802'){\n          condition = 'wi-day-cloudy'\n        }else{\n          condition = 'wi-cloudy'\n        }\n      }\n\n      return condition;\n    } \n    \n\n\n    function FormattedDate(dt) {\n\n        dt = dt * 1000;\n        const dayOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    \n        var date = new Date(dt)\n        console.log(date)\n        var year_str = date.getFullYear();\n        //月だけ+1すること\n        var month_str = 1 + date.getMonth();\n        var day_str = date.getDate();\n\n        var hour_str = date.getHours();\n        var minute_str = date.getMinutes();\n        var second_str = date.getSeconds();\n\n        var dow_index = date.getDay();\n        \n        month_str = ('0' + month_str).slice(-2);\n        // day_str = ('0' + day_str).slice(-2);\n\n        hour_str = ('0' + hour_str).slice(-2);\n        minute_str = ('0' + minute_str).slice(-2);\n        \n    \n        var dow_str = dayOfWeek[dow_index].slice(0,3);\n        \n        var format_str_date = 'DD (A)';\n        format_str_date = format_str_date.replace(/YYYY/g, year_str);\n        format_str_date = format_str_date.replace(/MM/g, month_str);\n        format_str_date = format_str_date.replace(/DD/g, day_str);\n        format_str_date = format_str_date.replace(/A/g, dow_str);\n\n        var format_str_time = 'hh:mm';\n        format_str_time = format_str_time.replace(/hh/g, hour_str);\n        format_str_time = format_str_time.replace(/mm/g, minute_str);\n\n        return format_str_time;\n    }\n\n    function responseCondition(code){\n\n        var res = props.responseObj;\n        // code = res[\"weather\"][0][\"id\"];\n  \n        var rcode = code.toString();\n        \n        var condition = '';\n  \n        if(rcode.slice(0, 1) === '2'){\n          condition = 'wi-storm-showers'\n        }else if(rcode.slice(0, 1) === '3'){\n          condition = 'wi-showers'\n        }else if(rcode.slice(0, 1) === '5'){\n          if(rcode === '500' || rcode.slice(0, 2) === '52'){\n            condition = 'wi-showers';\n          }else if(rcode === '502' || rcode === '503' || rcode === '504'){\n            condition = 'wi-rain';\n          }else{\n            condition = 'wi-rain';\n          }\n        }else if(rcode.slice(0, 1) === '6'){\n          condition = 'wi-snow'\n        }else if(rcode.slice(0, 1) === '7'){\n          condition = 'wi-fog'\n        }else if(rcode.slice(0, 1) === '8'){\n          if(rcode === '800'){\n            condition = 'wi-day-sunny'\n          }else if(rcode === '801' || rcode === '802'){\n            condition = 'wi-day-cloudy'\n          }else{\n            condition = 'wi-cloudy'\n          }\n        }\n  \n        return condition;\n      }   \n\n    \n      const container = {\n        hidden: { opacity: 0 },\n        show: {\n          opacity: 1,\n          transition: {\n            delayChildren: 2\n          }\n        }\n      }\n      \n      const item = {\n        hidden: { opacity: 0 },\n        show: { opacity: 1 }\n      }\n\n    return (\n        <div>\n            { \n             (!props.loading && !props.error && props.responseWeeklyObj.daily) ?\n                <AnimatePresence exitBeforeEnter>\n                <motion.div\n                animate={{\n                x: 0,\n                opacity: 1\n                }}\n                initial={{\n                x: 50,\n                opacity: 0\n                }}\n                exit={{\n                x: -50,\n                opacity: 0\n                }}\n                transition={{\n                duration: 0.5\n                }}\n                key=\"a\"\n                >\n                    <h1 className=\"h3\">Hourly – {eachHour} hour{eachHour===1 ? \"\":\"s\"}</h1>\n                    {/* {JSON.stringify(props.responseObj.daily)} */}\n                    \n\n                    <div className=\"overflow-auto\">\n                        <motion.div className=\"d-inline-flex\" variants={container} initial=\"hidden\" animate=\"show\">\n                        {\n                          hours.map((hour, i) =>                                         \n                            <motion.div key={i} className=\"d-inline mr-2 px-2 weather-card\" variants={item} initial=\"hidden\" animate=\"show\">\n                                <span>{getDate(hour.dt + new Date().getTimezoneOffset() * 60 + props.responseWeeklyObj.timezone_offset).getDate() + \" (\" + getDayOfWeek(getDate(hour.dt + new Date().getTimezoneOffset() * 60 + props.responseWeeklyObj.timezone_offset).getDay()).slice(0,3) + \")\"}</span>\n                                <p className=\"h3 \">{FormattedDate(hour[\"dt\"] + new Date().getTimezoneOffset() * 60 + props.responseWeeklyObj.timezone_offset )}</p>\n                                <i className={\"wi h2 \" + responseCondition(hour[\"weather\"][0][\"id\"])}></i>\n                                <p className=\"h3\"><CountUp start={0} end={Math.round(hour.temp, 1)} suffix=\"°\" duration={1.5}></CountUp></p>  \n                            </motion.div>\n                          )\n                        }\n                        </motion.div>\n                    </div>\n                    \n                    <div className=\"table-responsive-xl d-none\">\n                        <table className=\"table table-sm max-width text-white text-center\">\n                            <thead className=\"thead-dark\">\n                                <tr>\n                                    <th scope=\"col\">Date</th>\n                                    <th scope=\"col\">Weather</th>\n                                    <th scope=\"col\">Temp.</th>\n                                    \n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                   hours.map((hour, i) =>                                         \n                                        <tr key={i}>\n                                            <td>{FormattedDate(hour[\"dt\"])}</td>\n                                            <td><i className={\"wi \" + responseCondition(hour[\"weather\"][0][\"id\"])}></i></td>\n                                            <td><CountUp start={0} end={Math.round(hour.temp, 1)} suffix=\"°\" duration={1.5}></CountUp></td>  \n                                        </tr>\n                                    )\n                                    // JSON.stringify(days.daily)\n\n                                }\n                                \n                            </tbody>\n                        </table>\n                    </div>\n                    </motion.div>\n                </AnimatePresence>\n                : null\n            }\n        </div>\n    )\n }\n \n export default Hourly;","import React, { useState } from 'react';\nimport Conditions from './Conditions';\nimport Weekly from './Weekly';\nimport Hourly from './Hourly';\n\nconst Forecast = () => {\n    let [responseObj, setResponseObj] = useState({});\n    let [responseWeeklyObj, setResponseWeeklyObj] = useState({});\n    let [city, setCity] = useState('');\n    let [unit, setUnit] = useState('metric');\n\n    let [error, setError] = useState(false);\n    let [loading, setLoading] = useState(false);\n\n\n    var config  = require('../config');\n    let apikey = config.owmapikey;\n\n    function getForecast(e){\n        e.preventDefault();\n\n        if (city.length === 0) {\n            return setError(true);\n        }\n\n        // Clear state in preparation for new data\n        setError(false);\n\n        // スタート時はLoadingをTrueにする\n        setLoading(true);\n\n        const uriEncodedCity = encodeURIComponent(city);\n\n        var uri = \"https://api.openweathermap.org/data/2.5/weather?units=\" + unit + \"&q=\" + uriEncodedCity + \"&appid=\" + apikey;\n        fetch(uri, {\n            \"method\": \"GET\"\n            \n        })\n        .then(response => response.json())\n        .then(response => {\n            // エラー時はerrorをスローする\n            if (response.cod !== 200) {\n                throw new Error()\n            }\n            console.log(response);\n\n            setResponseObj(response);\n            // 処理完了(Loading->False)\n            setLoading(false);\n\n            getWeeklyForecast(response.coord.lat, response.coord.lon);\n            \n        }).catch(e => {\n            setError(true);\n            setLoading(false);\n            console.log(e)\n        });\n\n    }\n\n\n        \n\n    function getWeeklyForecast(lat, lon){\n        // e.preventDefault();\n\n        // var uri_weekly = \"https://api.openweathermap.org/data/2.5/onecall?exclude=daily\" + \"units=\" + unit + \"&q=\" + uriEncodedCity + \"&appid=\" + apikey;\n        var uri_weekly = \"https://api.openweathermap.org/data/2.5/onecall?lat=\" + lat + \"&lon=\" + lon + \"&units=\"+ unit +\"&appid=\" + apikey\n        fetch(uri_weekly, {\n            \"method\": \"GET\"\n            \n        })\n        .then(response => response.json())\n        .then(response => {\n            // エラー時はerrorをスローする\n            // if (response.cod !== 200) {\n            //     throw new Error()\n            // }\n            console.log(response);\n            setResponseWeeklyObj(response);\n            \n            // 処理完了(Loading->False)\n            setLoading(false);\n            \n        })\n        .catch(e => {\n            setError(true);\n            setLoading(false);\n            console.log(e)\n        });\n\n    }\n\n    return (\n        <div onLoad={getForecast}>\n            \n            <form onSubmit={getForecast} className=\"text-center\">\n                \n                <div className=\"md-form form-check-inline\">\n                    <input\n                        id = \"location\"\n                        className = \"form-control rounded-0 text-white\"\n                        type=\"text\"\n                        placeholder=\"Enter City\"\n                        maxLength=\"50\"\n                        value={city}\n                        onChange={(e) => setCity(e.target.value)}\n                        />\n                </div>\n                <div class=\"form-check form-check-inline\">\n                    <input\n                            id = \"imperial\"\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"units\"\n                            checked={unit === \"imperial\"}\n                            value=\"imperial\"\n                            onChange={(e) => setUnit(e.target.value)}\n                            />\n                    <label className=\"form-check-label\" for=\"imperial\">F°</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                    <input\n                        id = \"metric\"\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"units\"\n                        checked={unit === \"metric\"}\n                            value=\"metric\"\n                            onChange={(e) => setUnit(e.target.value)}\n                            />\n                    <label className=\"form-check-label\" for=\"metric\">C°</label>\n                </div>\n                \n                <button type=\"submit\" className=\"btn bg-warning rounded-0\"><span className=\"h6\">GO</span></button>\n            </form>\n\n            <div className=\"row mt-3\">\n                <div className=\"col-12 mb-3 mb-md-none col-lg-4\">\n                    <Conditions\n                responseObj={responseObj}\n                error={error} \n                loading={loading} \n                />\n                \n                </div>\n                \n                <div className=\"col-12 col-lg-8 p-lg-0\">\n                    <div className=\"col-12 col-lg-12 mb-3\">\n                        <Hourly\n                responseWeeklyObj={responseWeeklyObj}\n                error={error} \n                loading={loading} \n                />\n                    </div>\n\n                    <div className=\"col-12 col-lg-12\">\n                        <Weekly\n                responseWeeklyObj={responseWeeklyObj}\n                error={error} \n                loading={loading} \n                />\n                    </div>\n\n                </div>\n                \n            \n\n            \n\n            </div>\n            \n            \n        </div>\n    )\n}\n\nexport default Forecast;","import React from 'react';\n\nfunction FormattedDate(props) {\n\n    const dayOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    const monthName = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    var date = props.date;\n    var year_str = date.getFullYear();\n    //月だけ+1すること\n    var month_str = 1 + date.getMonth();\n    var day_str = date.getDate();\n    var hour_str = date.getHours();\n    var minute_str = date.getMinutes();\n    var second_str = date.getSeconds();\n    var dow_index = date.getDay();\n    \n    month_str = ('0' + month_str).slice(-2);\n    day_str = ('0' + day_str).slice(-2);\n    hour_str = ('0' + hour_str).slice(-2);\n    minute_str = ('0' + minute_str).slice(-2);\n    second_str = ('0' + second_str).slice(-2);\n\n    var dow_str = dayOfWeek[dow_index].slice(0,3);\n    \n    var format_str_date = 'YYYY/MM/DD (A)';\n    format_str_date = format_str_date.replace(/YYYY/g, year_str);\n    // format_str_date = format_str_date.replace(/MMM/g, monthName[date.getMonth()].slice(0,3));\n    format_str_date = format_str_date.replace(/MM/g, month_str);\n    format_str_date = format_str_date.replace(/DD/g, day_str);\n    format_str_date = format_str_date.replace(/A/g, dow_str);\n\n    var format_str_time = 'hh:mm';\n    format_str_time = format_str_time.replace(/hh/g, hour_str);\n    format_str_time = format_str_time.replace(/mm/g, minute_str);\n    format_str_time = format_str_time.replace(/ss/g, second_str);\n    \n    \n    return(\n      <div className=\"text-right\">\n        <span className=\"h3\">{format_str_date}</span>\n        <span className=\"ml-2 display-4\">{format_str_time}</span>\n      </div>\n    );\n}\n  \nclass Clock extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {date: new Date()};\n    }\n  \n    componentDidMount() {\n      this.timerID = setInterval(\n        () => this.tick(),\n        1000\n      );\n    }\n  \n    componentWillUnmount() {\n      clearInterval(this.timerID);\n    }\n  \n    tick() {\n      this.setState({\n        date: new Date()\n      });\n    }\n  \n    render() {\n      return (\n        <div>\n          <FormattedDate date={this.state.date} />\n        </div>\n      );\n    }\n  }\n\n  export default Clock;","import React from 'react';\nimport Forecast from './component/Forecast'\nimport './App.css';\nimport Clock from './component/Clock'\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nfunction App() {\n\n  var date = new Date();\n  var h = date.getHours();\n  var gradCode = \"\";\n  if(6 <= h && h <= 12){\n    gradCode = \"linear-gradient(to right, #4ca1af, #c4e0e5)\";\n  }else if(13 <= h && h <= 16){\n    gradCode = \"linear-gradient(to right, #808080, #3fada8)\";\n  }else if(17 <= h && h <= 20){\n    gradCode = \"linear-gradient(to right, #ff5f6d, #ffc371)\";\n  }else{\n    gradCode = \"linear-gradient(to right, #000428, #004e92)\";\n  }\n  \n  return (\n    <div className=\"container-fluid\" style={{\"background\": gradCode, \"min-height\": \"100%\"}}>\n        <div className=\"pt-4 pb-4 vh-100 overflowY-auto\" >\n    \n        <motion.div className=\"shadow1 px-4 text-white v-auto\" style={{\"background-color\": \"rgba(0,0,0,0.45)\", \"border-radius\": \"20px\"}}\n        animate={{\n          x: 0,\n          opacity: 1\n        }}\n        initial={{\n          x: 50,\n          opacity: 0\n        }}\n        exit={{\n          x: -50,\n          opacity: 0\n        }}\n        transition={{\n          duration: 0.5\n        }}\n        > \n          <div className=\"pt-2\">\n            <Clock />\n          </div>\n\n          <div className=\"bg-warning mb-3\" style={{\"height\": 5 + \"px\"}}></div>\n      \n          <div className=\"pb-3\">\n            <Forecast />\n          </div>\n          \n        </motion.div>\n        </div>\n        \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}